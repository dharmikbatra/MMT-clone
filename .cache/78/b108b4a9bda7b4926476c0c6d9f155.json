{"id":"../../node_modules/stripe-client/index.js","dependencies":[{"name":"/Users/dhbatra/Desktop/MMT-clone-backend/package.json","includedInParent":true,"mtime":1716316125702},{"name":"/Users/dhbatra/Desktop/MMT-clone-backend/node_modules/stripe-client/package.json","includedInParent":true,"mtime":1716316125686},{"name":"form-urlencoded","loc":{"line":2,"column":31,"index":80},"parent":"/Users/dhbatra/Desktop/MMT-clone-backend/node_modules/stripe-client/index.js","resolved":"/Users/dhbatra/Desktop/MMT-clone-backend/node_modules/form-urlencoded/form-urlencoded.js"}],"generated":{"js":"const STRIPE_URL = 'https://api.stripe.com/v1/';\nconst FORMURLENCODED = require('form-urlencoded');\n\nmodule.exports = function(key) {\n  return {\n    createToken: async function (details) {\n      const keys = Object.keys(details);\n      const index = _findType(details, keys);\n      var token;\n      if (index == 0) {\n        let type = keys[index];\n        var newDetails = _convertDetails(type, details[type]);\n        token = await _createTokenHelper(newDetails, key);\n      } else {\n        token = await _createTokenHelper(details, key);\n      }\n      return _parseJSON(token);\n    }\n  }\n}\n\n// Stripe normally only allows for fetch format for the details provided.\n// _findType allows the user to use the node format of the details by\n// figuring out which format/type the details provided are.\nfunction _findType(details, keys) {\n  if (details.card != null) {\n    return keys.indexOf(\"card\");\n  } else if (details.bank_account != null) {\n    return keys.indexOf(\"bank_account\");\n  } else if (details.pii != null) {\n    return keys.indexOf(\"pii\");\n  } else return false;\n}\n\n// _convertDetails converts and returns the data in the given details\n// to the correct Stripe format for the given type.\nfunction _convertDetails(type, details) {\n  var convertedDetails = {}\n  for (var data in details) {\n    const string = type + '[' + data + ']';\n    convertedDetails[string] = details[data];\n  }\n  return convertedDetails;\n}\n\n// Stripe gives a JSON object with the token object embedded as a JSON string.\n// _parseJSON finds that string in and returns it as a JSON object, or an error\n// if Stripe threw an error instead. If the JSON does not need to be parsed, returns the token.\nasync function _parseJSON(token) {\n  if (token._bodyInit == null) {\n    return token;\n  } else {\n    const body = await token.json();\n    return body;\n  }\n}\n\nfunction _createTokenHelper(details, key) {\n  const formBody = FORMURLENCODED(details);\n  return fetch(STRIPE_URL + 'tokens', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Bearer ' + key\n    },\n    body: formBody\n  });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/stripe-client/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/stripe-client/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"../../node_modules/stripe-client/index.js":"const STRIPE_URL = 'https://api.stripe.com/v1/';\nconst FORMURLENCODED = require('form-urlencoded');\n\nmodule.exports = function(key) {\n  return {\n    createToken: async function (details) {\n      const keys = Object.keys(details);\n      const index = _findType(details, keys);\n      var token;\n      if (index == 0) {\n        let type = keys[index];\n        var newDetails = _convertDetails(type, details[type]);\n        token = await _createTokenHelper(newDetails, key);\n      } else {\n        token = await _createTokenHelper(details, key);\n      }\n      return _parseJSON(token);\n    }\n  }\n}\n\n// Stripe normally only allows for fetch format for the details provided.\n// _findType allows the user to use the node format of the details by\n// figuring out which format/type the details provided are.\nfunction _findType(details, keys) {\n  if (details.card != null) {\n    return keys.indexOf(\"card\");\n  } else if (details.bank_account != null) {\n    return keys.indexOf(\"bank_account\");\n  } else if (details.pii != null) {\n    return keys.indexOf(\"pii\");\n  } else return false;\n}\n\n// _convertDetails converts and returns the data in the given details\n// to the correct Stripe format for the given type.\nfunction _convertDetails(type, details) {\n  var convertedDetails = {}\n  for (var data in details) {\n    const string = type + '[' + data + ']';\n    convertedDetails[string] = details[data];\n  }\n  return convertedDetails;\n}\n\n// Stripe gives a JSON object with the token object embedded as a JSON string.\n// _parseJSON finds that string in and returns it as a JSON object, or an error\n// if Stripe threw an error instead. If the JSON does not need to be parsed, returns the token.\nasync function _parseJSON(token) {\n  if (token._bodyInit == null) {\n    return token;\n  } else {\n    const body = await token.json();\n    return body;\n  }\n}\n\nfunction _createTokenHelper(details, key) {\n  const formBody = FORMURLENCODED(details);\n  return fetch(STRIPE_URL + 'tokens', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Bearer ' + key\n    },\n    body: formBody\n  });\n}\n"},"lineCount":70}},"error":null,"hash":"b5c1334e79bcec2c5bf13ddafe301600","cacheData":{"env":{}}}